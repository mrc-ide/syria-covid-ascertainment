# This is an example orderly configuration file, tailored to the
# ncov-outputs repository.  Generate it to reflect your needs.  This
# template assumes that you are going to generate a docx output from
# an Rmd file, but everything can be changed.

# If you would rather generate a plain template, use
#
#   orderly::orderly_new(template = "system")

# In order to create a template, the Rmd file has been called
# "example.Rmd".  You need must:
#
# * Rename example.Rmd to yourname.Rmd
# * Edit the yourname.Rmd to correct the metadata (title and authors)
# * Edit the 'artefacts' section to point at yourname.docx
# * Edit the 'resources' section to point at yourname.Rmd

# You must have a script that does something with the data.  This will
# be a single string and the filename must exist when orderly is run.
# The default is to use script.R, and that file (by default) will run
# your Rmd file.  Please edit script.R to contain the correct name of
# your Rmd.
script: script.R

# Optional parameters for the task. Things listed here will be
# available as R variables in your script.  For example:
#
# parameters:
#   a:
#     default: 1
#   b: ~
#
# would declare a parameter called 'a' with a default value of 1, and
# a parameter of b with no default.
#
parameters:
    reporting_fraction:
      default: 0.1
    date: ~
    dam_pop:
      default: 2394000
    poorer_health_outcomes:
      default: FALSE
    city_age:
      default: "normal"
    hosp_beds:
      default: 4300
    hospital_normal_use:
      default: 0.55
    late_start:
      default: FALSE
    data_to_fit:
      default: "reported"

# You must list at least one artefact that your report will generate.
# Each artefact consists of one or more files.  The format is to list
# the "type" of an artefact (staticgraph, interactivegraph, data,
# report), then below that a description (free text) and then a
# filename as either a single file or an array of files
#
#     artefacts:
#       - staticgraph:
#           description: A graph of things
#           filenames: mygraph.png
#       - report:
#           description: A complex report
#           filenames:
#             - report.html
#             - figures/fig1.png
#             - figures/fig2.png
#
# The example below is suitable for creating a single docx output. If
# you also produce data files or standlone plots declare them as well.
#
# Please update the filename to reflect your filename (typically this
# would be the same as the .Rmd, with the extension changed to .docx)
artefacts:
  - report:
      description: Projections report syria
      filenames:
        - res.rds
        - likelihood.rds

# An optional name to describe the report in more detail than its
# directory name (which must be short) but less detail than
# "description" (which can be as long as you want).  Must be a string.
#
# displayname:

# An optional free-text description to decsribe the report in as much
# detail as you want.  Must be a string.  The yaml `>-` or `|` syntax
# might be useful for long descriptions.
#
# description:

# Packages that should be loaded before the script is run.  Use this
# in preference to explicit library() calls in your script because it
# will make it easier to provision containers to run the orderly
# reports.
packages:
  - knitr
  - squire
  - tidyr
  - ggplot2
  - ggrepel
  - magrittr
  - dplyr
  - here
  - plotly
  - rvest
  - xml2
  - grid
  - ggforce
  - countrycode
  - cowplot
  - RhpcBLASctl

# Source files, in addition to the script.  Typically these will
# contain function definitions.  These will be sourced after loading
# any packages, and before running your script.  Use this in
# preference to explicit source() calls in your script because
# otherwise you will have to add them to "resources" (see below)
#
# sources:
  # - R/plotting.R
  # - R/report_grab.R

# Resources that the script needs to run; this is an array of strings
# representing filenames *relative to, and below, this directory*.
# These will be copied into place when the script is run, and again
# when commiting the report.  If you require a file and do not list it
# here, your script will fail!  (That's a good thing because we find
# out what your script actually needed immediately).  You do not need
# to list files already listed in "sources" here, or any .sql files
# referenced in "views" or "data"
#
resources:
  - pars_init.rds
  - google_brt.rds
  - death_sheet.xlsx
  - certs_deaths_july.rds

global_resources:


# Indicate which reports your report depends on.  You can use this to
# pull in artefacts from previous reports.  You can depend in multiple
# reports.  The format looks like this:
#
#     depends:
#       other_report_name:
#         id: (identifier, possibly "latest")
#         use: (mapping of filenames in the format dest: from)
#         draft: (true, if you want to use a draft report)

# For example, to depend on the latest version of report
# 'other-report', pulling in 'data.csv' as 'other-data.csv' you might
# use:
#
#     depends:
#       other-report:
#         id: latest
#         use:
#           other-data.csv: data.csv
#
# REMEMBER:
#   * before the colon is what the file will be called in your new directory
#   * after the colon is what the file is called in the existing task
#
depends:
